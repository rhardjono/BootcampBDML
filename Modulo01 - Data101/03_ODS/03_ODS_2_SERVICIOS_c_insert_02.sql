USE ODS;

##########################################################################################################################

#========================================================================================================================#
## [*comprobar*] Para verificar direcciones existentes en ODS_HC_DIRECCIONES:
#
#SELECT * FROM ODS.ODS_HC_DIRECCIONES
#WHERE ID_CIUDAD_ESTADO = 1 AND DE_CP = 89115 AND UPPER(DE_DIRECCION) LIKE '%POINT%'
#
# test_1
#SELECT UPPER(DE_DIRECCION), DE_CP FROM ODS.ODS_HC_DIRECCIONES
#WHERE 
#UPPER(DE_DIRECCION) LIKE '%2ND POINT%'
#ORDER BY DE_DIRECCION
#;
# test_2
#SELECT UPPER(PRODUCT_ADDRESS), PRODUCT_POSTAL_CODE FROM STAGE.STG_PRODUCTOS_CRM
#WHERE 
#UPPER(PRODUCT_ADDRESS) LIKE '%2ND%'
#ORDER BY PRODUCT_ADDRESS
#;
#========================================================================================================================#

#== VERSION BETA ==#
/*
INSERT INTO ODS_HC_DIRECCIONES (DE_DIRECCION, DE_CP, ID_CIUDAD_ESTADO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(PRO.PRODUCT_ADDRESS)) DIRECCION
, CASE WHEN LENGTH(TRIM(PRO.PRODUCT_POSTAL_CODE))<>0 THEN TRIM(PRO.PRODUCT_POSTAL_CODE) ELSE 99999 END CP, CIU.ID_CIUDAD_ESTADO, NOW(), NOW()
FROM STAGE.STG_PRODUCTOS_CRM PRO
INNER JOIN ODS.ODS_DM_PAISES PAI ON CASE 
WHEN LENGTH(TRIM(PRO.PRODUCT_COUNTRY))<>0 AND UPPER(TRIM(PRO.PRODUCT_COUNTRY))='UNITED STATES' THEN 'US' #REPLACE(PRO.PRODUCT_COUNTRY, 'UNITED STATES', 'US')
WHEN LENGTH(TRIM(PRO.PRODUCT_COUNTRY))<>0 THEN PRO.PRODUCT_COUNTRY 
ELSE 'DESCONOCIDO' END=PAI.DE_PAIS
INNER JOIN ODS.ODS_DM_CIUDADES_ESTADOS CIU ON CASE WHEN LENGTH(TRIM(PRO.PRODUCT_CITY))<>0 THEN PRO.PRODUCT_CITY ELSE 'DESCONOCIDO' END=CIU.DE_CIUDAD
	AND CASE WHEN LENGTH(TRIM(PRO.PRODUCT_STATE))<>0 THEN PRO.PRODUCT_STATE ELSE 'DESCONOCIDO' END=CIU.DE_ESTADO
WHERE TRIM(PRODUCT_ADDRESS)<>'';
#---> La subselect devuelve un conjunto de direcciones. Para comprobar que no existen en la tabla ODS_HC_DIRECCIONES
#     ver [*comprobar*]
*/

#********************************#
#*	HAY DIRECCIONES DUPLICADAS  *#
#********************************#
# Entre las tablas STAGE.STG_CLIENTES_CRM y STAGE.STG_PRODUCTOS_CRM hay 3 direcciones en comun que generan duplicados en ODS.TMP_DIRECCIONES_PRODUCTOS
#SELECT * FROM STAGE.STG_CLIENTES_CRM WHERE ADDRESS LIKE '42 NANCY TRAIL';			--> esta direccion que solo existe en STAGE.STG_CLIENTES_CRM
#SELECT * FROM STAGE.STG_PRODUCTOS_CRM WHERE PRODUCT_ADDRESS LIKE '42 NANCY TRAIL'; --> esta direccion que solo existe en STAGE.STG_CLIENTES_CRM
#
#SELECT DE_DIRECCION, DE_CP, COUNT(*) AS TOTAL FROM ODS.TMP_DIRECCIONES_PRODUCTOS GROUP BY DE_DIRECCION, DE_CP HAVING TOTAL>1;
#'3 CARBERRY COURT', '85705', '2'
#'35 UTAH AVENUE', '89519', '2'
#'42 NANCY TRAIL', '89036', '2'
#
# El error provien en primer lugar al rellenar la tabla ODS.ODS_HC_DIRECCIONES 
#SELECT * FROM ODS.ODS_HC_DIRECCIONES WHERE DE_DIRECCION in ('3 CARBERRY COURT', '35 UTAH AVENUE', '42 NANCY TRAIL');
#SELECT * FROM ODS.TMP_DIRECCIONES_PRODUCTOS WHERE DE_DIRECCION in ('3 CARBERRY COURT', '35 UTAH AVENUE', '42 NANCY TRAIL');

#== VERSION FINAL ==# (SE EXCLUYEN DUPLICADOS)
INSERT INTO ODS_HC_DIRECCIONES (DE_DIRECCION, DE_CP, ID_CIUDAD_ESTADO, FC_INSERT, FC_MODIFICACION)
SELECT DISTINCT UPPER(TRIM(PRO.PRODUCT_ADDRESS)) DIRECCION
, CASE WHEN LENGTH(TRIM(PRO.PRODUCT_POSTAL_CODE))<>0 THEN TRIM(PRO.PRODUCT_POSTAL_CODE) ELSE 99999 END CP
, CIU.ID_CIUDAD_ESTADO
, NOW()
, NOW()
FROM STAGE.STG_PRODUCTOS_CRM PRO
INNER JOIN ODS.ODS_DM_PAISES PAI ON CASE 
	WHEN LENGTH(TRIM(PRO.PRODUCT_COUNTRY))<>0 AND UPPER(TRIM(PRO.PRODUCT_COUNTRY))='UNITED STATES' THEN 'US' #REPLACE(PRO.PRODUCT_COUNTRY, 'UNITED STATES', 'US')
	WHEN LENGTH(TRIM(PRO.PRODUCT_COUNTRY))<>0 THEN PRO.PRODUCT_COUNTRY 
ELSE 'DESCONOCIDO' END=PAI.DE_PAIS
INNER JOIN ODS.ODS_DM_CIUDADES_ESTADOS CIU ON CASE 
	WHEN LENGTH(TRIM(PRO.PRODUCT_CITY))<>0 THEN PRO.PRODUCT_CITY ELSE 'DESCONOCIDO' END=CIU.DE_CIUDAD
	AND CASE
    WHEN LENGTH(TRIM(PRO.PRODUCT_STATE))<>0 THEN PRO.PRODUCT_STATE ELSE 'DESCONOCIDO' END=CIU.DE_ESTADO
LEFT OUTER JOIN ODS.ODS_HC_DIRECCIONES DIR ON PRO.PRODUCT_ADDRESS = DIR.DE_DIRECCION AND PRO.PRODUCT_POSTAL_CODE = DIR.DE_CP
WHERE TRIM(PRODUCT_ADDRESS)<>'' AND (DIR.DE_DIRECCION IS NULL AND DIR.DE_CP IS NULL);

COMMIT;

#========================================================================================================================#
# Estos valores ya existen en ODS_HC_DIRECCIONES
#========================================================================================================================#
#INSERT INTO ODS_HC_DIRECCIONES VALUES (999999, 'DESCONOCIDO', 99999, 999, NOW(), NOW());
#INSERT INTO ODS_HC_DIRECCIONES VALUES (999998, 'NO APLICA', 99998, 998, NOW(), NOW());
#COMMIT;

ANALYZE TABLE ODS_HC_DIRECCIONES;